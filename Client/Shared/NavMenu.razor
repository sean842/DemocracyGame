@inject NewBlazorProjecct.Shared.Services.UserService UserService
@inject NavigationManager Navigation
@using NewBlazorProjecct.Client.Components

<nav>
    <div>
        @if (UserService.IsLoggedIn) {
            <NavLink href="@($"./LecturePage/{UserService.LoggedInUser.UserID}")" Match="NavLinkMatch.All">
                משחק
            </NavLink>
        }
        else {
            <NavLink href="UserPage" Match="NavLinkMatch.All">
                משחק
            </NavLink>
        }
    </div>
    <div>
        @if (UserService.IsLoggedIn) {

            <input class="btn-nav" type="button" value="עורך" @onclick="NavTo" />

        }
        else {
            <input class="btn-nav" type="button" value="עורך" @onclick="ShowLoginPopup" />
        }
    </div>
    <div>
        <input class="btn-nav" type="button" value="אודות" @onclick="ShowAboutPopup" />
    </div>
    @if (UserService.IsLoggedIn) {
        <div>
            <input class="btn-nav" type="button" value="Logout" @onclick="Logout" />
        </div>
    }
</nav>

<LoginPopup @ref="loginPopup" OnLoginSuccess="OnLoginSuccess" />
<AboutPopup @ref="aboutPopup" />


@code {

    [Parameter]
    public int UserID { get; set; }

    private LoginPopup loginPopup;
    private bool isLoggedIn = false;
    private AboutPopup aboutPopup;

    private void ShowLoginPopup() {
        loginPopup?.Show();
    }

    void ShowAboutPopup() {
        aboutPopup?.Show();
    }

    private void OnLoginSuccess() {
        // isLoggedIn = true;
        StateHasChanged();
    }
    private void Logout() {
        UserService.Logout();
        Navigation.NavigateTo("./UserPage");

        StateHasChanged();
    }
    void NavTo() {
        Navigation.NavigateTo("./MyGames/" + UserService.LoggedInUser.UserID);

    }
}
