@inject NewBlazorProjecct.Shared.Services.UserService UserService
@inject NavigationManager Navigation
@using NewBlazorProjecct.Client.Components




 <nav>


     <div class="logoWrapper">
        <img src="./imgs/logo.png" />
     </div>

    <ul class="nav-links">
        @if (UserService.IsLoggedIn) {
            <li class="myNavBTN"> <a href="@($"./LecturePage/{UserService.LoggedInUser.UserID}")"> משחק </a>  </li>
        }
        else {
            <li class="myNavBTN"> <a href="@("./UserPage")"> משחק </a>  </li>
        }

        @if (UserService.IsLoggedIn) {
            <li class="myNavBTN"> <a href="@($"./MyGames/{UserService.LoggedInUser.UserID}")"> עורך </a>  </li>
        }
        else {
            <li class="myNavBTN"> <a @onclick="ShowLoginPopup"> עורך</a> </li>
        }



        <li class="myNavBTN"> <a @onclick="ShowAboutPopup"> אודות </a> </li>
        <li class="myNavBTN"> <a @onclick="ShowHowTo"> איך משחקים? </a> </li>

        @if (UserService.IsLoggedIn) {
            <li class="myNavBTN"> <a @onclick="Logout"> התנתקות</a> </li>

        }






    </ul>


 </nav>



<LoginPopup @ref="loginPopup" OnLoginSuccess="OnLoginSuccess" />
<AboutPopup IsVisible="@showPopup" OnClose="HideAboutPopup"></AboutPopup>
@if (showHowTo) {
    <HowTo OnClose="HideHowTo" />
}

@code {



    private bool showHowTo = false;

    private void ShowHowTo() {
        showHowTo = true;
    }

    private void HideHowTo(bool isVisible) {
        showHowTo = isVisible;
    }










    private bool showPopup = false;


    bool howto = false;
    [Parameter]
    public int UserID { get; set; }

    private LoginPopup loginPopup;
    private bool isLoggedIn = false;
    private AboutPopup aboutPopup;

    bool showOdot = false;




    private void ShowHotTo() {
        howto = true;
    }
    private void ShowLoginPopup() {
        loginPopup?.Show();
    }


    private void exitPopUp2() {
        howto = false;
    }
    private void OnLoginSuccess() {
        // isLoggedIn = true;
        StateHasChanged();
    }

    void NavTo() {
        Navigation.NavigateTo("./MyGames/" + UserService.LoggedInUser.UserID);

    }

    private void Logout() {
        UserService.Logout();
        loginPopup?.ClearLoginFields(); // קריאה לניקוי השדות בפופאפ
        Navigation.NavigateTo("./UserPage");
        StateHasChanged();
    }

    private void exitPopUp3() {
        showOdot = false;
    }



    private void ShowAboutPopup() {
        showPopup = true;
    }

    private void HideAboutPopup() {
        showPopup = false;
    }




}
